
# ARCHITECTURE FILE FOR LINUX PC (64 bits) WITH GNU (GFORTRAN) COMPILER
# =====================================================================

# Fortran (cross-)compiler
# ------------------------

FRTNAME = $MFBENCH_COMPILER_MPIF90

# C (cross-)compiler
# ------------------

VCCNAME = $MFBENCH_COMPILER_MPICC

# C++ (cross-)compiler
# --------------------

CXXNAME = $MFBENCH_COMPILER_MPICXX

# Native C compiler
# -----------------

CCNATIVE = gcc

# Native C linker flags
# ---------------------

LNK_MPCCNATIVE =

# fypp preprocessor
# -----------------

GMK_FYPP = $MFBENCH_INSTALL/tools/fypp/bin/fypp

# fypp preprocessor background flags
# ----------------------------------

GMK_FYPP_FLAGS = -M $MFBENCH_INSTALL/tools/yaml/lib -m os -m yaml

# Fortran compiler default version (stamp)
# ----------------------------------------

LIBFRT = echo OMGNU1140

# Basic compilation flags
# -----------------------

FRTFLAGS = -c -fconvert=swap -fno-second-underscore -fbacktrace -m64 -fopenmp -ffree-line-length-none -fno-sign-zero -fpic -fcray-pointer -fno-range-check -g -pipe -fallow-argument-mismatch -fallow-invalid-boz -Wall

VCCFLAGS = -c -m64 -fopenmp -fpic -g -pipe -Wall

# Option -C in order to create files without compiling inside odb98
# In order to have any effect from the following -1 or -A options,
# -O3 optimization level must be activated.
ODBFLAGS = -C -O3

# Fortran double precision flags
# ------------------------------
DBL_FRTFLAGS =

# Fortran Cpp + extensions flags
# ------------------------------
F77_CPPFLAG =
F90_CPPFLAG =
F77_NOCPPFLAG =
F90_NOCPPFLAG =

# Fortran format flag
# --------------------
FREE_FRTFLAG = -ffree-form
FIXED_FRTFLAG = -ffixed-form

# Optimized compilation flag
# --------------------------

OPT_FRTFLAGS = -O2
OPT_VCCFLAGS = -O2

# Debugging compilation flag
# --------------------------

DBG_FRTFLAGS = -Og

# Bound checking compilation flag
# -------------------------------

BCD_FRTFLAGS = -fbounds-check

# NaN pre-initialisation flag
# ----------------------------

NAN_FRTFLAGS = -finit-real=snan -ffpe-trap=invalid,zero,overflow

# Listing compilation flag
# ------------------------

LIST_FRTFLAGS =
LIST_VCCFLAGS =

# Filename extension for listing
# ------------------------------

LIST_EXTENSION = lst

# Additive compilation flags
# --------------------------

MACROS_FRT = -DLINUX -DLITTLE_ENDIAN -DLITTLE -DPARKIND1_SINGLE -DADDRESS64 -DGRIB_API_1
MACROS_CC = -DLINUX -DLITTLE_ENDIAN -DLITTLE -DPARKIND1_SINGLE -DGRIB_API_1
MACROS_CXX = -std=c++11
MACROS_BL95 = -DLINUX -DLITTLE_ENDIAN -DLITTLE -DIS_MAIN_PROG -DSTATIC_LINKING
MACROS_ODB98 = -DLINUX -DLITTLE_ENDIAN -DLITTLE -DXPRIVATE=PRIVATE -UINTERCEPT_ALLOC -UUSE_ALLOCA_H -DWITHOUT_OML

GMK_FCFLAGS_MPA =
GMK_FCFLAGS_PHYEX =
GMK_FCFLAGS_MSE = -DSFX_FA
GMK_FCFLAGS_SURFEX = -Din_surfex -DSFX_ARO -DSFX_ASC -DSFX_OL -DSFX_TXT -DSFX_FA -DSFX_LFI -DARO -DOL -DASC -DTXT -DFA -DLFI

GMK_FCFLAGS_SATRAD = -D_RTTOV_DO_DISTRIBCOEF -D_RTTOV_HDF -DWITHOUT_EMOSLIB

GMK_FCFLAGS_IFSAUX = -DHIGHRES -DBLAS -DPOINTER_64 -DFA_GRIB_NO_VERBOSE
GMK_CFLAGS_IFSAUX = -DPOINTER_64
GMK_FCFLAGS_ALGOR = -DBLAS
GMK_CFLAGS_ODB = -DSTATIC_LINKING -DXPRIVATE=PRIVATE -DINTERCEPT_ALLOC -DUSE_ALLOCA_H -DHAS_LAPACK -fno-var-tracking-assignments -DODB_NMXUPD=4
GMK_FCFLAGS_ODB = -DHAS_MAGICS -DNEW_MAGICS
GMK_CFLAGS_BLACKLIST = -DSTATIC_LINKING -DXPRIVATE=PRIVATE -DINTERCEPT_ALLOC -DUSE_ALLOCA_H

GMK_FCFLAGS_TRANS = -DWITH_FFTW
GMK_FCFLAGS_ETRANS = -DWITH_FFTW

# Fortran (cross-)linker
# ----------------------

LNK_STD = $MFBENCH_COMPILER_F90

# Message Passing Fortran (cross-)linker
# --------------------------------------

LNK_MPI = $MFBENCH_COMPILER_MPIF90

# cc (cross-)linker
# -----------------

LNK_CC =  $MFBENCH_COMPILER_MPICC -ldl -lrt -lstdc++ -fopenmp

# CXX (cross-)linker (for mixed langages c++ and fortran)
# -------------------------------------------------------

LNK_CXX = $MFBENCH_COMPILER_MPICXX -lstdc++

# Fortran linking flags
# ----------------------

LNK_FLAGS = -fopenmp -ffast-math -ldl -lrt -lstdc++ -Wl,-rpath,$MFBENCH_INSTALL/$MFBENCH_ARCH/lib

# Additional linking flags to LNK_FLAGS for c++ executable
# --------------------------------------------------------

LNK_CXX_FLAGS = 

# flags for executable targets
# ----------------------------

LNK_EXEC =

# flags for shared object targets
# -------------------------------

LNK_SOLIB = -shared

# Fortran Flag for start/end group libraries 
# ------------------------------------------

LNK_STARTG = -Wl,--start-group
LNK_ENDG   = -Wl,--end-group

# Flags for linking with whole static libraries or not
# ----------------------------------------------------

LNK_WHOLE_ARCHIVE = -Wl,-whole-archive
LNK_NO_WHOLE_ARCHIVE = -Wl,-no-whole-archive

# Flags for static/dynamic linking
# --------------------------------

LNK_STATIC = -Wl,-Bstatic
LNK_DYNAMIC = -Wl,-Bdynamic

# Load map flag
# -------------

LNK_MAP = -Wl,-M

# Hub
# ---

# Hub general directory
GMK_HUB_DIR      = hub

# Hub general installation directory (must be at a fixed place inside the pack in order to be propagated)
GMK_HUB_INSTALL  = install

# Hub general build directory (absolute path because it may be a non-permanent directory in production mode)
GMK_HUB_BUILD    = \${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMKLOCAL}/build

# List of projects in hub (ordered sort to enable dependencies)
GMK_HUB_PROJECTS = ecSDK OOPS Atlas Fiat Ectrans FieldAPI

GMK_HUB_LIBRARIES_IN_ecSDK = ecbuild eckit fckit
GMK_HUB_METHOD_FOR_ecSDK = cmake

GMK_HUB_LIBRARIES_IN_OOPS = oops_src
GMK_HUB_METHOD_FOR_OOPS = cmake

GMK_HUB_LIBRARIES_IN_Atlas = atlas
GMK_HUB_METHOD_FOR_Atlas = cmake

GMK_HUB_LIBRARIES_IN_Fiat = fiat
GMK_HUB_METHOD_FOR_Fiat = cmake

GMK_HUB_LIBRARIES_IN_Ectrans = ectrans
GMK_HUB_METHOD_FOR_Ectrans = cmake

GMK_HUB_LIBRARIES_IN_FieldAPI = field_api
GMK_HUB_METHOD_FOR_FieldAPI = cmake

GMK_CMAKE_ecbuild = -Wno-deprecated -Wno-dev -DCMAKE_C_COMPILER=\${VCCNAME}

GMK_CMAKE_eckit = -Wno-deprecated -Wno-dev -DCMAKE_C_COMPILER=\${VCCNAME} -DCMAKE_C_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS}\" -DCMAKE_CXX_COMPILER=\${CXXNAME} -DCMAKE_CXX_FLAGS=\"-I$MFBENCH_COMPILER_INSTALL/include/eigen3 ${VCCFLAGS} ${OPT_VCCFLAGS} ${MACROS_CXX}\" -DCMAKE_BUILD_TYPE=NONE -DENABLE_ECKIT_CMD=OFF -DENABLE_ECKIT_SQL=OFF -DENABLE_BZIP2=OFF -DENABLE_SNAPPY=OFF -DENABLE_LAPACK=OFF -DENABLE_CURL=OFF -DENABLE_DOCS=OFF -DENABLE_SSL=OFF -DBUILD_SHARED_LIBS=BOTH -DECBUILD_2_COMPAT=ON -DECBUILD_2_COMPAT_DEPRECATE=OFF -Deigen_ROOT=$MFBENCH_COMPILER_INSTALL

GMK_CMAKE_fckit = -Wno-deprecated -Wno-dev -DCMAKE_CXX_COMPILER=\${CXXNAME} -DCMAKE_CXX_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS} ${MACROS_CXX}\" -DCMAKE_Fortran_COMPILER=\${FRTNAME} -DCMAKE_Fortran_FLAGS=\"${FRTFLAGS} ${OPT_FRTFLAGS}\" -DCMAKE_BUILD_TYPE=NONE -DCMAKE_PREFIX_PATH=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMK_HUB_INSTALL}/ecSDK -DENABLE_FINAL=OFF -DENABLE_TESTS=ON -DBUILD_SHARED_LIBS=OFF -DECBUILD_2_COMPAT_DEPRECATE=OFF 

GMK_CMAKE_oops_src = -Wno-deprecated -Wno-dev -DCMAKE_C_COMPILER=\${VCCNAME} -DCMAKE_C_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS}\" -DCMAKE_CXX_COMPILER=\${CXXNAME} -DCMAKE_CXX_FLAGS=\"-I$MFBENCH_COMPILER_INSTALL/include/eigen3 ${VCCFLAGS} ${OPT_VCCFLAGS} ${MACROS_CXX}\" -DCMAKE_Fortran_COMPILER=\${FRTNAME} -DCMAKE_Fortran_FLAGS=\"${FRTFLAGS} ${OPT_FRTFLAGS}\" -DCMAKE_BUILD_TYPE=NONE -Decbuild_ROOT=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMKSRC}/ecSDK -DECKIT_PATH=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMK_HUB_INSTALL}/ecSDK -DFCKIT_PATH=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMK_HUB_INSTALL}/ecSDK -DEIGEN3_INCLUDE_DIR=$MFBENCH_COMPILER_INSTALL/include/eigen3 -Decbuild_ROOT=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMKSRC}/ecSDK -DENABLE_TESTS=ON -DBUILD_SHARED_LIBS=BOTH -DECBUILD_2_COMPAT_DEPRECATE=OFF -DCMAKE_PREFIX_PATH=$MFBENCH_COMPILER_INSTALL

GMK_CMAKE_atlas = -Wno-deprecated -Wno-dev -DCMAKE_C_COMPILER=\${VCCNAME} -DCMAKE_C_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS}\" -DCMAKE_CXX_COMPILER=\${CXXNAME} -DCMAKE_CXX_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS} ${MACROS_CXX}\" -DCMAKE_Fortran_COMPILER=\${FRTNAME} -DATLAS_Fortran_FLAGS=\"${FRTFLAGS} ${OPT_FRTFLAGS}\" -DCMAKE_BUILD_TYPE=NONE -Decbuild_ROOT=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMKSRC}/ecSDK -DCMAKE_PREFIX_PATH=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMK_HUB_INSTALL}/ecSDK -DENABLE_TESTS=ON -DBUILD_SHARED_LIBS=OFF -DECBUILD_2_COMPAT_DEPRECATE=OFF

GMK_CMAKE_fiat = -Wno-deprecated -Wno-dev -DCMAKE_C_COMPILER=\${VCCNAME} -DCMAKE_C_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS} ${MACROS_CC} -lm\" -DCMAKE_CXX_COMPILER=\${CXXNAME} -DCMAKE_CXX_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS} -lm ${MACROS_CXX}\" -DCMAKE_Fortran_COMPILER=\${FRTNAME} -DCMAKE_Fortran_FLAGS=\"${FRTFLAGS} ${OPT_FRTFLAGS} ${MACROS_FRT}\" -DCMAKE_BUILD_TYPE=NONE -Decbuild_ROOT=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMKSRC}/ecSDK -DBUILD_SHARED_LIBS=BOTH -DENABLE_TESTS=ON -DECBUILD_2_COMPAT_DEPRECATE=OFF -DENABLE_SINGLE_PRECISION=ON -DENABLE_DOUBLE_PRECISION=OFF -DENABLE_DUMMY_MPI_HEADER=OFF

GMK_CMAKE_ectrans = -Wno-deprecated -Wno-dev -DCMAKE_C_COMPILER=\${VCCNAME} -DCMAKE_C_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS}\" -DCMAKE_CXX_COMPILER=\${CXXNAME} -DCMAKE_CXX_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS} ${MACROS_CXX}\" -DCMAKE_Fortran_COMPILER=\${FRTNAME} -DCMAKE_Fortran_FLAGS=\"${FRTFLAGS} ${OPT_FRTFLAGS} ${MACROS_FRT}\" -DCMAKE_BUILD_TYPE=NONE -Decbuild_ROOT=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMKSRC}/ecSDK -Dfiat_ROOT=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMK_HUB_INSTALL}/Fiat -DENABLE_TRANSI=OFF -DBUILD_SHARED_LIBS=OFF -DENABLE_TESTS=ON -DECBUILD_2_COMPAT_DEPRECATE=OFF -DENABLE_SINGLE_PRECISION=ON -DENABLE_DOUBLE_PRECISION=OFF -DENABLE_GPU=OFF -DCMAKE_PREFIX_PATH=$MFBENCH_COMPILER_INSTALL

GMK_CMAKE_field_api = -Wno-deprecated -Wno-dev -DCMAKE_C_COMPILER=\${VCCNAME} -DCMAKE_C_FLAGS=\"${VCCFLAGS} ${OPT_VCCFLAGS}\" -DCMAKE_Fortran_COMPILER=\${FRTNAME} -DCMAKE_Fortran_FLAGS=\"${FRTFLAGS} ${OPT_FRTFLAGS} ${MACROS_FRT}\" -DCMAKE_BUILD_TYPE=NONE -Decbuild_ROOT=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMKSRC}/ecSDK -Dfiat_ROOT=\${TARGET_PACK}/\${GMK_HUB_DIR}/\${GMK_LAST_HUB_BRANCH}/\${GMK_HUB_INSTALL}/Fiat -DBUILD_SHARED_LIBS=OFF -DENABLE_ACC=OFF -DENABLE_SINGLE_PRECISION=ON -DENABLE_DOUBLE_PRECISION=OFF

# User libraries (absolute filename or short name) :
# ------------------------------------------------

# "Read Grib from BDAP":
LD_USR01 = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/librgb.a

# "Bufr decoding":
LD_USR02 = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/libbufr.a

# "ec":
LD_USR03 =

# "Gribex (or emos)":
LD_USR04 = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/libgribex.a

# "ecmwf field database":
LD_USR05 = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/libdummy_fdb.a

# "ecmwf wave model":
LD_USR06 = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/libdummy_wam.a

# "C code generated by blacklist":
LD_USR07 =

# "Nag":
LD_USR08 = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/libdummy_naglite.a

# "OASIS":
LD_USR09 = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/libdummy_oasis.a

# "Grib_api":
LD_USR_GRIB_API_F90 = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/libeccodes_f90.so
LD_USR_GRIB_API = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/libeccodes.so

# "JPEG library":
LD_USR_JPEG =

# "EECFI" for aeolus:
LD_USR_EECFI =

# "Netcdf :"
LD_USR_NETCDF_F = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/libnetcdff.so
LD_USR_NETCDF = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/libnetcdf.so

# "HDF5" :
LD_USR_HDF5_HLFORTRAN = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/libhdf5_hl_fortran.a
LD_USR_HDF5_FORTRAN = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/libhdf5_fortran.a
LD_USR_HDF5 = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/libhdf5.a

# "Meteo-France dummies library (IFS only):"
LD_USR_MF_DUMMY =

# "Magics :"
LD_USR_MAGPLUS = MagPlus
LD_USR_MAGICS = MagPlusSingle

# "xml :"
LD_USR_XML =

# "Boost" :
LD_USR_BOOST_UNIT_TEST_FRAMEWORK = boost_unit_test_framework

# Libraries from Hub :
# "eckit/fckit":
LD_USR_FCKIT = fckit
LD_USR_ECKIT_MPI = eckit_mpi
LD_USR_ECKIT = eckit

# "OOPS" :
LD_USR_OOPS = oops

# "OOPS-neural" :
LD_USR_OOPS_NEURAL = neural

# "Atlas" :
LD_USR_ATLAS_F = atlas_f

# parkind :
LD_USR_PARKIND = parkind_sp

# fiat :
LD_USR_FIAT = fiat

# mpi_serial :
LD_USR_MPI_SERIAL = mpi_serial

# ectrans :
LD_USR_ECTRANS = trans_sp

# field_api :
LD_USR_FIELD_API = field_api_sp

# Language libraries (absolute filename or short name) :
# ----------------------------------------------------

# Lapack:
LD_LANG01 = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/liblapack.so

# Blas:
LD_LANG02 = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/libblas.so

# System-dependent libraries - ALWAYS LOADED - (absolute filename or short name) :
# ------------------------------------------------------------------------------

LD_SYS01 = $MFBENCH_INSTALL/$MFBENCH_ARCH/lib/libdummy_ibm.a
LD_SYS02 = stdc++
LD_SYS03 =
LD_SYS04 =
LD_SYS05 =

# MPI libraries (absolute filename or short name) :
# -----------------------------------------------

LD_MPI01 =
LD_MPI02 =
LD_MPI03 =

LD_MPI_DUMMY = dummy_mpi

# Precompiler libraries
# ---------------------

LD_LIBC  =
LD_LIBM  = -lm
LD_LIBVFL =

# External include pathes (path1:path2:...)
# ------------------------------------------

INCLUDEPATH = $MFBENCH_INSTALL/$MFBENCH_ARCH/include:$MFBENCH_INSTALL/$MFBENCH_ARCH/share

# (Cross-) nm command & options for BSD format
# --------------------------------------------

NMOPTS = nm

# Native awk program
# ------------------

AWK = awk

# (Cross-)archive
# ---------------

AR = ar

# Native archive
# --------------

ARNATIVE = ar

# Native preprocessor
# -------------------

CPP = cpp

# cmake executable
# ----------------

GMK_CMAKE = $MFBENCH_INSTALL/tools/cmake/bin/cmake

# Native lex program
# ------------------

LEX = flex -l

# Includes & modules
# ------------------

MODINC = -I
MODEXT = mod

# gget to recover volatile libraries
# ----------------------------------

GGET =

# External script used to generate and pre-process th blacklist file
# ------------------------------------------------------------------

GMK_BL_GENERATOR =

# Epilog of script
# ----------------

EPILOG = echo Finished on \$(date)

# Prefix of user's $(SHELL)rc file
# --------------------------------

GMKUSERFILE = 

# Prefix for root packs
# ---------------------

PACK_PREFIX =

# Suffix for root packs
# ---------------------

PACK_EXT =

# Binaries directory name
# -----------------------

GMKBIN = bin

# Libraries directory name
# ------------------------

GMKLIB = lib

# All-sources directory name
# --------------------------

GMKSRC = src

# Interfaces directory name for each branch
# -----------------------------------------

GMKINTFB = .intfb

# directory of .F90 files generated from .fypp files
# --------------------------------------------------

GMKFYPPF90 = .fypp

# MAIN (ie : bottom background) source directory name
# ---------------------------------------------------

GMKMAIN = main

# INTERMEDIATE (ie : intermediate background) source directory name
# -----------------------------------------------------------------

GMKINTER = inter

# LOCAL (ie : top) source directory name
# --------------------------------------

GMKLOCAL = local

# Unsatisfied external references main directory
# ----------------------------------------------

GMKUNSX = unsxref

# Quiet unsatisfied external references directory
# -----------------------------------------------

GMKUNSX_QUIET = quiet

# Verboose unsatisfied external references directory
# --------------------------------------------------

GMKUNSX_VERBOOSE = verbose

# system-program main directory
# -----------------------------

GMKSYS = sys

# Genesis file name
# -----------------

GMK_GENESIS = .genesis

# View file name
# --------------

GMK_VIEW = .gmkview

# Logfile name
# ------------

GMK_LOG = .logfile

# Scriptfile prefix
# -----------------

GMK_ICS = ics_

# Submission cards : number of nodes
# ----------------------------------

GMK_NQS_NODES = 

# Submission cards : large memory
# -------------------------------

GMK_NQS_LARGE = 

# Submission cards : time limit
# -----------------------------

GMK_NQS_TIME  = 

# Submission cards : output file KEY
# ----------------------------------

GMK_NQS_OUT_P = 

# Submission cards : error file KEY
# ---------------------------------

GMK_NQS_ERR_P = 

# Submission cards : output/error file stamp
# ------------------------------------------

GMK_NQS_JOBID = 

# Submission cards : other directives
# -----------------------------------
 
GMK_NQS_OTHER = 
GMK_NQS_OTHER = 
GMK_NQS_OTHER = 
GMK_NQS_OTHER = 
GMK_NQS_OTHER = 
GMK_NQS_OTHER = 
GMK_NQS_OTHER = 

# Compiler feature extension for aeolus software
# ----------------------------------------------
GMK_AEOLUS_F90 = gfortran

# LatLon handling extension for aeolus software
# ---------------------------------------------
GMK_AEOLUS_LATLON_HANDLING = simple

